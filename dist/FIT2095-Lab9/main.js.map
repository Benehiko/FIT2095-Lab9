{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actor/actor.component.css","webpack:///./src/app/actor/actor.component.html","webpack:///./src/app/actor/actor.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/database.service.ts","webpack:///./src/app/movie/movie.component.css","webpack:///./src/app/movie/movie.component.html","webpack:///./src/app/movie/movie.component.ts","webpack:///./src/app/selection.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,mRAAmR,WAAW,mBAAmB,YAAY,21BAA21B,WAAW,mBAAmB,YAAY,+8BAA+8B,WAAW,mBAAmB,YAAY,2K;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3oE;AACI;AACE;AAOtD;IAQE,wBAAoB,SAA0B,EAAU,gBAAkC;QAAtE,cAAS,GAAT,SAAS,CAAiB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAN1F,aAAQ,GAAU,EAAE,CAAC;QACrB,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,EAAE,CAAC;QACd,UAAK,GAAG,CAAC,CAAC;QACV,YAAO,GAAG,EAAE,CAAC;IAGb,CAAC;IAED,iBAAiB;IACjB,oCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,IAAW;YAC/C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAmC;IACnC,oCAAW,GAAX;QAAA,iBAKC;QAJC,IAAM,GAAG,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC9C,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;IAClB,uCAAc,GAAd,UAAe,IAAI;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,sCAAa,GAAb;QAAA,iBAKC;QAJC,IAAM,GAAG,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC5D,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IACf,sCAAa,GAAb,UAAc,IAAI;QAAlB,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YACnD,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kGAAkG;IAClG,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,qCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QACpD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IA9DU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAS+B,iEAAe,EAA4B,mEAAgB;OAR/E,cAAc,CAgE1B;IAAD,qBAAC;CAAA;AAhE0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,grD;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACK;AAOrD;IAIE,sBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAFtD,YAAO,GAAG,CAAC,CAAC;IAGZ,CAAC;IAED,oCAAa,GAAb,UAAc,SAAS;QACrB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IAVU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKsC,mEAAgB;OAJ3C,YAAY,CAWxB;IAAD,mBAAC;CAAA;AAXwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEM;AACU;AACN;AACR;AACW;AACG;AACJ;AAgBrD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,qEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,iEAAe,EAAE,mEAAgB,CAAC;YAC9C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBmB;AACoB;AAE7D,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;CAC/D,CAAC;AAMF;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAID,mCAAS,GAAT;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;IAED,kCAAQ,GAAR,UAAS,EAAU;QACjB,IAAM,GAAG,GAAG,UAAU,GAAG,EAAE,CAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,qCAAW,GAAX,UAAY,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACtD,CAAC;IAED,qCAAW,GAAX,UAAY,EAAE,EAAE,IAAI;QAClB,IAAM,GAAG,GAAG,UAAU,GAAG,EAAE,CAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC/C,CAAC;IAED,qCAAW,GAAX,UAAY,EAAE;QACZ,IAAM,GAAG,GAAG,UAAU,GAAG,EAAE,CAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC5C,CAAC;IAED,qCAAW,GAAX,UAAY,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACtD,CAAC;IAED,mCAAS,GAAT;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAI;QACX,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,OAAO,GAAG,OAAO,EAAE,WAAW,CAAC,CAAC;IACpE,CAAC;IAED,qCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;IACxD,CAAC;IA9CU,eAAe;QAJ3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAFzB,eAAe,CA+C3B;IAAD,sBAAC;CAAA;AA/C2B;;;;;;;;;;;;ACX5B,mB;;;;;;;;;;;ACAA,k2BAAk2B,YAAY,mBAAmB,WAAW,mBAAmB,sBAAsB,+K;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr4B;AACI;AACE;AAOtD;IAOE,wBAAoB,SAA0B,EAAU,gBAAkC;QAAtE,cAAS,GAAT,SAAS,CAAiB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL1F,YAAO,GAAU,EAAE,CAAC;QACpB,eAAU,GAAG,EAAE,CAAC;QAChB,cAAS,GAAG,CAAC,CAAC;QACd,iBAAY,GAAG,CAAC,CAAC;IAGjB,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,mCAAU,GAAV;QAAA,iBAKC;QAJC,IAAM,GAAG,GAAG,EAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC9C,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,IAAW;YAC/C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV,UAAW,OAAO,EAAE,OAAO;QAA3B,iBAKC;QAJC,IAAM,GAAG,GAAG,EAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3C,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAa,GAAb,UAAc,EAAE;QAAhB,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC7C,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAY,GAAZ;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QACzD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAjDU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQ+B,iEAAe,EAA4B,mEAAgB;OAP/E,cAAc,CAkD1B;IAAD,qBAAC;CAAA;AAlD0B;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AAKzC;IAEE;IACA,CAAC;yBAHU,gBAAgB;IAO3B,0CAAe,GAAf,UAAgB,WAAW;QACzB,kBAAgB,CAAC,SAAS,GAAG,WAAW,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,kBAAgB,CAAC,SAAS,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,uCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,kBAAgB,CAAC,SAAS,CAAC,CAAC;QACxC,OAAO,kBAAgB,CAAC,SAAS,CAAC;IACpC,CAAC;;IAhBU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;;ACL7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- First section: Display all in a tble -->\\n<div class=\\\"section\\\" *ngIf=\\\"section==1\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Birth Year</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of actorsDB\\\">\\n      <td>{{item.name}}</td>\\n      <td>{{item.bYear}}</td>\\n    </tr>\\n  </table>\\n</div>\\n<!-- Second Section: Add new actor -->\\n<div class=\\\"section\\\" *ngIf=\\\"section==2\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"actorName\\\">Full Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"fullName\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"actorName\\\">Birth Year</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"bYear\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSaveActor()\\\">Save Actor</button>\\n</div>\\n<!-- Section 3: Update actor -->\\n<div class=\\\"section\\\" *ngIf=\\\"section==3\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Birth Year</th>\\n      <th>Select!</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of actorsDB\\\">\\n      <td>{{item.name}}</td>\\n      <td>{{item.bYear}}</td>\\n      <td>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSelectUpdate(item)\\\">Update</button>\\n      </td>\\n    </tr>\\n  </table>\\n  <hr>\\n  <div *ngIf=\\\"actorsDB.length>0\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"actorName\\\">Full Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"fullName\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"actorName\\\">Birth Year</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"bYear\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateActor()\\\">Update Actor</button>\\n  </div>\\n</div>\\n<!-- Section 4: Delete Actor -->\\n<div class=\\\"section\\\" *ngIf=\\\"section==4\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Birth Year</th>\\n      <th>Delete?</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of actorsDB\\\">\\n      <td>{{item.name}}</td>\\n      <td>{{item.bYear}}</td>\\n      <td>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onDeleteActor(item)\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {DatabaseService} from '../database.service';\nimport {SelectionService} from '../selection.service';\n\n@Component({\n  selector: 'app-actor',\n  templateUrl: './actor.component.html',\n  styleUrls: ['./actor.component.css']\n})\nexport class ActorComponent implements OnInit {\n\n  actorsDB: any[] = [];\n  section = 1;\n  fullName = '';\n  bYear = 0;\n  actorId = '';\n\n  constructor(private dbService: DatabaseService, private selectionService: SelectionService) {\n  }\n\n  // Get all Actors\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n\n  // Create a new Actor, POST request\n  onSaveActor() {\n    const obj = {name: this.fullName, bYear: this.bYear};\n    this.dbService.createActor(obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n\n  onUpdateActor() {\n    const obj = {name: this.fullName, bYear: this.bYear};\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n\n  // Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n\n  // This lifecycle callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.getSelection();\n    this.onGetActors();\n  }\n\n  resetValues() {\n    this.fullName = '';\n    this.bYear = 0;\n    this.actorId = '';\n  }\n\n  getSelection() {\n    this.section = this.selectionService.getSelection();\n    this.resetValues();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>Actors DB System</h1>\\n</div>\\n<!-- The navigation bar -->\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n  <ul class=\\\"navbar-nav\\\">\\n    <li class=\\\"nav-item\\\" style=\\\"padding-left:0.2in\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"changeSection(1)\\\">Home</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" style=\\\"padding-left:0.2in\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"changeSection(2)\\\">Add Actor</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" style=\\\"padding-left:0.2in\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"changeSection(3)\\\">Update Actor</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" style=\\\"padding-left:0.2in\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"changeSection(4)\\\">Delete Actor</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" style=\\\"padding-left:0.2in\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"changeSection(5)\\\">Add Movie</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" style=\\\"padding-left:0.2in\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"changeSection(6)\\\">Delete Movie</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" style=\\\"padding-left:0.2in\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"changeSection(7)\\\">Add Movie To Actor</a>\\n    </li>\\n  </ul>\\n</nav>\\n\\n<div *ngIf=\\\"section==1\\\">\\n  <app-actor></app-actor>\\n</div>\\n<div *ngIf=\\\"section==2\\\">\\n  <app-actor></app-actor>\\n</div>\\n<div *ngIf=\\\"section==3\\\">\\n  <app-actor></app-actor>\\n</div>\\n<div *ngIf=\\\"section==4\\\">\\n  <app-actor></app-actor>\\n</div>\\n<div *ngIf=\\\"section==5\\\">\\n  <app-movie></app-movie>\\n</div>\\n<div *ngIf=\\\"section==6\\\">\\n  <app-movie></app-movie>\\n</div>\\n<div *ngIf=\\\"section==7\\\">\\n  <app-movie></app-movie>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {SelectionService} from './selection.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  section = 1;\n\n  constructor(private selectionService: SelectionService) {\n  }\n\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.selectionService.changeSelection(sectionId);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ActorComponent } from './actor/actor.component';\nimport {DatabaseService} from './database.service';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { MovieComponent } from './movie/movie.component';\nimport {SelectionService} from './selection.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ActorComponent,\n    MovieComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [DatabaseService, SelectionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'}),\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DatabaseService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  result: any;\n\n  getActors() {\n    return this.http.get('/actors');\n  }\n\n  getActor(id: string) {\n    const url = '/actors/' + id;\n    return this.http.get(url);\n  }\n\n  createActor(data) {\n    return this.http.post('/actors', data, httpOptions);\n  }\n\n  updateActor(id, data) {\n    const url = '/actors/' + id;\n    return this.http.put(url, data, httpOptions);\n  }\n\n  deleteActor(id) {\n    const url = '/actors/' + id;\n    return this.http.delete(url, httpOptions);\n  }\n\n  createMovie(data) {\n    return this.http.post('/movies', data, httpOptions);\n  }\n\n  getMovies() {\n    return this.http.get('/movies');\n  }\n\n  addActor(data) {\n    const movieId = data.movieId;\n    const actorId = data.actorId;\n    return this.http.put('/movies/' + movieId + actorId, httpOptions);\n  }\n\n  deleteMovie(id) {\n    return this.http.delete('/movies/' + id, httpOptions);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- Section 5: Add Movie -->\\n<div class=\\\"section\\\" *ngIf=\\\"movieSection==5\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"movieName\\\">Movie Title</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"movieName\\\" [(ngModel)]=\\\"movieTitle\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"movieYear\\\">Movie Year</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"movieYear\\\" [(ngModel)]=\\\"movieYear\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onAddMovie()\\\">Add Movie</button>\\n\\n</div>\\n\\n<!-- Section 6: Delete Movie -->\\n<div class=\\\"section\\\" *ngIf=\\\"movieSection==6\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Title</th>\\n      <th>Year</th>\\n      <th>Actor</th>\\n      <th>Delete?</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of movieDB\\\">\\n      <td>{{item.title}}</td>\\n      <td>{{item.year}}</td>\\n      <td>{{item.actors.fullName}}</td>\\n      <td>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onDeleteMovie(item._id)\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {DatabaseService} from '../database.service';\nimport {SelectionService} from '../selection.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n\n  movieDB: any[] = [];\n  movieTitle = '';\n  movieYear = 0;\n  movieSection = 1;\n\n  constructor(private dbService: DatabaseService, private selectionService: SelectionService) {\n  }\n\n  ngOnInit() {\n    this.getSelection();\n    this.onGetMovies();\n  }\n\n  onAddMovie() {\n    const obj = {title: this.movieTitle, year: this.movieYear};\n    this.dbService.createMovie(obj).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.movieDB = data;\n    });\n  }\n\n  onAddActor(movieId, actorId) {\n    const obj = {movieId: movieId, actorId: actorId};\n    this.dbService.addActor(obj).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n  onDeleteMovie(id) {\n    this.dbService.deleteMovie(id).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n  getSelection() {\n    this.movieSection = this.selectionService.getSelection();\n    this.resetValues();\n  }\n\n  resetValues() {\n    this.movieTitle = '';\n    this.movieYear = 0;\n  }\n}\n\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectionService {\n\n  constructor() {\n  }\n\n  static selection;\n\n  changeSelection(selectionID) {\n    SelectionService.selection = selectionID;\n    console.log(SelectionService.selection);\n    return true;\n  }\n\n  getSelection() {\n    console.log(SelectionService.selection);\n    return SelectionService.selection;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}